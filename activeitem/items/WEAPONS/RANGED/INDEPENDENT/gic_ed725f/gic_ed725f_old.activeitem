{
  "itemName" : "gic_ed725f_old",	//this is an example weapon. Copy the folder to your mod (in appropriate location) and change "examplerifle" for the name you want to use
  "price" : 1200,
  "inventoryIcon" : "gic_ed725f.png:armed.1",
  "maxStack" : 1,
  "rarity" : "Common",
  "description" : "Fires 2 ^yellow;18.5x70mm slug or buckshot rounds^reset; loaded in a break-action fashion. This iconic model is often within arm's reach of Novakid merchants and smugglers (if there was any difference to begin with). Protectorate officials typically turn a blind-eye to these firearms, brushing them off as ''cultural'' weapons that are consistent with Novakid tastes despite their ironic origins.",
  "shortdescription" : "Ethos Drake 725 Field",
  "level" : 1,
  
  "tooltipKind" : "gic_largebase_ammogun_highres_base",//custom tooltip, values set by the .lua
  "highResImg" : "/items/weapons/ranged/independent/gic_ed725f/gic_ed725f_highres.png",
  
  "category" : "^orange;Hunting Weapon^reset;",
  "itemTags" : ["weapon","ranged","shotgun","gic"],
  "twoHanded" : true,
  "missChanceToggle" : true,    
  //"npcGun" : true,
  "consumeAmmoModule" : true,
  "dynamicRecoil" : false,
  "consumeAmmoAmount" : 2,
  
  "weaponDeterioration" : true,				//weapon deterioration module enabler; when enabled, the gun will lose one "durability" with every single shot. the lower the durability, the worse the performance.
  "weaponDurability" : [600,800],					//how much total durability the weapon has. will be set dynamically by scripts, this reps. default value. Can be set as an array to randomize initial durability. 200-300
  "weaponDurabilityMax" : 800,				//max durability for weapon
  "weaponDurabilityEffectMultiplier" : 0.5,		//negative effects of wep. deterioration are multiplied by this. For context by default at 0.0% durability, weapon will have 100% worse stats.
  
  "weaponAcceptRepairs" : true,		//if enabled, then accepts repair items
  "weaponRepairAcceptTags" : ["gic_repair"],	//repair item tags that this weapon can accept. repair items function like vanilla augments/attachments
  
  "fireShellProjectile" : "gic_gunfirenoise_standardknockback",		//shell projectile that spawns at muzzleOffset every time user fires. used to spawn noise projectiles
  "fireShellProjectileConfig" : {
  },
  
  "consumeAmmoOrderedInventory" : true,						//if enabled, gun will search for ammo in order as placed in the player's inventory! allows for players to better control what ammo they want to use
  "consumeAmmoTag" : "gic_1850x70mm_ammo",						//must be defined with consumeAmmoOrderedInventory is enabled! any item with this itemTag will be considered as a possible ammo item; will only be used as an ammo item if the tagged item's name matches with something from consumeAmmoType!
  
  "consumeAmmoType" : ["gic_1850x70mm_buckshot","gic_1850x70mm_slug"],
  "magazineDamageValues" : [200,200],		 					//first mag deals first listed value, etc. Can be a single value to set as for all different mag types. Only needed if "consumeAmmoType" is an array
  //"ammoMaxValues" : 7,									//will not function if consumeAmmoType is a table and "singleBulletLoad" is enabled.
  "ammoProjectileType" : ["gic_standardbullet_c_shotgun","gic_standardbullet_c_slug"],		//ammo types for mags, same ordering as above. this array cannot contain arrays.
  "ammoProjectileTypeMiss" : ["gic_standardbullet_miss_c_shotgun_pointblank","gic_standardbullet_miss_c_slug_pointblank"],	//ammo types miss for mags, same ordering as above. this array cannot contain arrays.
  "ammoProjectileCount" : [12,1],							//amount of projectiles per shot. may be wack at times.
  "crouchAccuracy" : true,
  
  
  "ammoMax" 		: 2,			//Specifies how big the guns' magazine is.
  //"magazineProjectile" : "gic_shellcasing_shotgunshell_x2_ejectshell_dbs",
  "magazineProjectiles" : ["gic_shellcasing_shotgunshell_ejectshell","gic_shellcasing_shotgunshell_slug_ejectshell"],
  
  "ammoAmount" 		: 2,			//Holds the current amount of ammo. Mostly set dynamically

  "animation" : "/items/active/weapons/ranged/gun.animation",
  "animationParts" : {
    "butt" : "",
    "middle" : "gic_ed725f.png",
    "barrel" : "",
    "muzzleFlash" : ""
  },
  "animationCustom" : {
	"animatedParts":{
      "stateTypes" : {
        "gunState" : {
          "default" : "empty",
          "states" : {					//animations are handled by both gunammo.lua (ammo states) and gunfireammo.lua (firing state). If you want to change those, make a copy and work with that.
			"firing" :{					//gun will transition to "firing" state each time you pull the trigger
			  "frames" : 1,
			  "cycle" : 1,
			  "mode" : "transition",
			  "transition" : "armed"	//transition mode and animation is set up for the crossbow. may not work for everything
			},
            "armed" : {					//gun transitions to "armed" state if it has ammo
              "frames" : 1,
			  "mode":"end"
            },
            "empty" : {					//gun transitions to "empty" if it has no ammo
              "frames" : 1,
			  "mode":"end"
            },
			"reloading" : {				//reloading animation, placeholder here but can be useful if reloadejects is set to false
			  "frames" : 7,
			  "mode" : "transition",
			  "transition" : "empty"
			}
          }
        }
      },

      "parts" : {
        "middle" : {
          "properties" : {
            "image" : null
          },

          "partStates" : {
            "gunState" : {
			  "firing" : {
				"properties" : {
				  "image" : "<partImage>:armed.<frame><paletteSwaps>"
				}
			  },
              "armed" : {
                "properties" : {
                  "image" : "<partImage>:armed.<frame><paletteSwaps>"
                }
              },
              "empty" : {
                "properties" : {
                  "image" : "<partImage>:armed.1<paletteSwaps>"
                }
              },
			  "reloading" : {
			    "properties" : {
				  "image" : "<partImage>:reload.<frame><paletteSwaps>"
				}
			  }
            }
          }
        }
      }
	},
	"particleEmitters" : {
      "muzzleFlash" : {
        "burstCount" : 2,
        "particles" : [
		  { "particle" : "gic_tinyvehicledustysmoke", "offset" : [1.7, 0.2], "count" : 2 }
        ]
      },
      "hotsmoke" : {
        "burstCount" : 3,
        "particles" : [
		  { "particle" : "gic_riflemuzzle", "offset" : [1.5, 0.8], "count" : 3 }
        ]
      }
    },
    "sounds" : {
      "fire" 		: [ "/sfx/gun/gic_tf2_scatter_gun_shoot.ogg" ],
	  "empty"		: [ "/sfx/gun/reload/machinepistol_reload_clip1.ogg" ],
      "switchAmmo" 	: [ "/sfx/gun/gic_shotgun_reload.ogg" ]
    }
  },

	
  "animationScripts" : [
    "/items/active/effects/laserbeam.lua"
  ],



  "baseOffset" : [0.15, -0.05],
  "muzzleOffset" : [-0.1, 0.6],

  "scripts" : ["/items/active/weapons/ranged/ews_weaponcore.lua","/abilities/weight/gic_light_weapon.lua"],

  "elementalType" : "ews_smallarms",

  "primaryAbility" : {
    "scripts" : ["/items/weapons/ranged/independent/gic_ed725f/gic_doublebarrel.lua"],
    "class" : "DBS",
	"missChance" : 50,
	"missChanceCrouch" : 30,		


    "fireTime" : 0.2, //RPM to RPS: 1/(RPM/60)
	"baseDamage" : 200,
    //"baseDps" : 3000, //Damage Per Bullet: (baseDps*fireTime)*(1+0.5*level-1) sounds like a long equation, but blame the SB leveling system for adding a retarded step. just default to level:1 for ease. To find baseDps from bullet damage and fire time, (damagePerShot/fireTime)=baseDps
	"bonusDps" : 0,					//the parameter responsible for extra per-shot damage, introduced by ammo. Per shot damage gets spread over all the projectiles
    "energyUsage" : false,
    "inaccuracy" : 0.04,
	//"dynamicRecoilMaxSteps" : 3,
	//"dynamicRecoilMissMultiplier" : 0.25,
	//"dynamicRecoil" : false,

    "projectileCount" : 12,
    "fireType" : "semi",

	"projectileTypeMiss" : "gic_standardbullet_miss_c_shotgun_pointblank",
    "projectileType" : "gic_standardbullet_c_shotgun",
    //"projectileType" : "gic_merc_shotgunbullet_dropoff",
    //"projectileParameters" : {
		//"actionOnReap" : [
			//{
				//"action" : "projectile",
				//"type" : "gic_merc_bulletc",
				//"fuzzAngle" : 0.0,
				//"directional" : "true",
				//"inheritDamageFactor": 0.5,
				//"config":{
					//"piercing" : false,
					//"timeToLive" : 0.02,
					//"actionOnReap" : [],
					//"damageKind" : "ews_smallarms",
					//"periodicActions" : []
				//}
			//},
			//{
				//"action" : "projectile",
				//"type" : "gic_merc_bulletc",
				//"fuzzAngle" : 0.0,
				//"directional" : "true",
				//"inheritDamageFactor": 0.4,
				//"config":{
					//"piercing" : false,
					//"timeToLive" : 0.07,
					//"actionOnReap" : [],
					//"damageKind" : "ews_smallarms",
					//"periodicActions" : []
				//}
			//},
			//{
				//"action" : "projectile",
				//"type" : "gic_merc_bulletc",
				//"fuzzAngle" : 0.0,
				//"directional" : "true",
				//"inheritDamageFactor": 0.1,
				//"config":{
					//"piercing" : false,
					//"timeToLive" : 1.0,
					//"damageKind" : "ews_smallarms"
				//}
			//}
		//]
    //},
    "stances" : {
      "idle" : {
        "armRotation" : -10,
        "weaponRotation" : 10,
        "twoHanded" : true,
  
        "allowRotate" : true,
        "allowFlip" : true,
		
	    "frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "fire" : {
        "duration" : 0.04,
        "armRotation" : 0,
        "weaponRotation" : 20,
        "twoHanded" : true,
  
        "allowRotate" : false,
        "allowFlip" : false,
		
	    "frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
 
      "motion1" : {
        "duration" : 0.04,
        "armRotation" : -3,
        "weaponRotation" : 17,
        "twoHanded" : true,
  
        "allowRotate" : false,
        "allowFlip" : false,
		
	    "frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "motion2" : {
        "duration" : 0.04,
        "armRotation" : -5,
        "weaponRotation" : 13,
        "twoHanded" : true,
  
        "allowRotate" : false,
        "allowFlip" : false,
		
	    "frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "motion3" : {
        "duration" : 0
      },
      "motion4" : {
        "duration" : 0
      },
      "motion5" : {
        "duration" : 0
      },
      "motion6" : {
        "duration" : 0
      },
	  "reload" : {
        "duration" : 0.05,
        "armRotation" : -15,
        "weaponRotation" : 10,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "reload1" : {
        "duration" : 0.25,
        "armRotation" : -15,
        "weaponRotation" : 10,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "swim.2"
      },
 
      "reload2" : {
        "duration" : 0.05,
        "armRotation" : -15,
        "weaponRotation" : 15,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "swim.2"
      },
      "reload3" : {
        "duration" : 0.3,
        "armRotation" : -15,
        "weaponRotation" : 15,
		"weaponOffset" : [0,-0.0],
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "reload4" : {
         "duration" : 0.1,
        "armRotation" : -5,
        "weaponRotation" : 20,
		"weaponOffset" : [0,-0.0],
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "rotation"
      },
      "reload5" : {
        "duration" : 0.05,
        "armRotation" : 2,
        "weaponRotation" : 3,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "rotation"
      },
      "reload6" : {
        "duration" : 0.25,
        "armRotation" : 0,
        "weaponRotation" : 0,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "cooldown" : {
        "duration" : 0.01,
        "armRotation" : -2,
        "weaponRotation" : 5,
        "twoHanded" : true,
  
        "allowRotate" : false,
        "allowFlip" : false,
		
	    "frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      }
    }
  },
  "builder" : "/items/buildscripts/ews_buildunrandweapon_highres.lua"
}
