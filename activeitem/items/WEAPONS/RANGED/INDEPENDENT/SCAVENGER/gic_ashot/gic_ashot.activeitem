{
  "itemName" : "gic_ashot",	//this is an example weapon. Copy the folder to your mod (in appropriate location) and change "examplerifle" for the name you want to use
  "price" : 0,
  "inventoryIcon" : "gic_ashot.png:armed.1",
  "maxStack" : 1,
  "rarity" : "Rare",
  "description" : "''Good for hunting monster and game. Wish there were more of the latter, though.''
  
Revolver base converted to fire a single 18.5x70mm shotgun cartridge. The firearm is hefty, unable to be fired single-handedly and often outclassed by other shotguns. Common in Scav territories and compact enough to act as a bulky holdout weapon.",
  "shortdescription" : "Ashot",
  "level" : 1,
  "tooltipKind" : "gic_largebase_ammogun_highres_base",//custom tooltip, values set by the .lua
  "highResImg" : "/items/weapons/ranged/independent/SCAVENGER/gic_ashot/gic_ashot_highres.png",
  "category" : "^orange;Shotgun Pistol^reset;",
  "itemTags" : ["weapon","ranged","rifle","pistol","shotgun","gic"],
  "twoHanded" : true,
  
  
  "weaponDeterioration" : true,				//weapon deterioration module enabler; when enabled, the gun will lose one "durability" with every single shot. the lower the durability, the worse the performance.
  "weaponDurability" : [150,300],					//how much total durability the weapon has. will be set dynamically by scripts, this reps. default value. Can be set as an array to randomize initial durability.
  "weaponDurabilityMax" : 300,				//max durability for weapon
  "weaponDurabilityEffectMultiplier" : 1.5,		//negative effects of wep. deterioration are multiplied by this. For context by default at 0.0% durability, weapon will have 100% worse stats.
  
  "weaponAcceptRepairs" : true,		//if enabled, then accepts repair items
  "weaponRepairAcceptTags" : ["gic_repair"],	//repair item tags that this weapon can accept. repair items function like vanilla augments/attachments
  
  "fireShellProjectile" : "gic_gunfirenoise_standardknockback",		//shell projectile that spawns at muzzleOffset every time user fires. used to spawn noise projectiles
  "fireShellProjectileConfig" : {
  },
  
  "switchAmmoAttachment" : false,
  "consumeAmmoModule" : true,
  
  "consumeAmmoOrderedInventory" : true,						//if enabled, gun will search for ammo in order as placed in the player's inventory! allows for players to better control what ammo they want to use
  "consumeAmmoTag" : "gic_1850x70mm_ammo",						//must be defined with consumeAmmoOrderedInventory is enabled! any item with this itemTag will be considered as a possible ammo item; will only be used as an ammo item if the tagged item's name matches with something from consumeAmmoType!
  
  "consumeAmmoType" : [
  "gic_1850x70mm_buckshot",
  "gic_1850x70mm_slug",
  "gic_1850x70mm_slug_highexplosive",
  "gic_1850x70mm_slug_whitephosphorus",
  "gic_1850x70mm_flechette",
  "gic_1850x70mm_pennyshot",
  "gic_1850x70mm_starshell"
  ],
  
  "magazineDamageValues" : [
  200,
  200,
  300,
  50,
  150,
  275,
  20
  ],	
  //first mag deals first listed value, etc. Can be a single value to set as for all different mag types. Only needed if "consumeAmmoType" is an array
  //"ammoMaxValues" : 7,									//will not function if consumeAmmoType is a table and "singleBulletLoad" is enabled.

  "ammoProjectileType" : [
  "gic_standardbullet_c_shotgun",
  "gic_standardbullet_c_slug",
  "gic_standardbullet_c_slug_highexplosive",
  "gic_standardbullet_c_slug_whitephosphorus",
  "gic_highvelbullet_c",
  "gic_standardbullet_a_pennyshot_messenger",
  "gic_1850x70mm_starshell_stage1"
  ],		//ammo types for mags, same ordering as above. this array cannot contain arrays.

  "ammoProjectileTypeMiss" : [
  "gic_standardbullet_miss_c_shotgun_pointblank",
  "gic_standardbullet_miss_c_slug_pointblank",
  "gic_standardbullet_miss_c_slug_highexplosive_pointblank",
  "gic_standardbullet_c_slug_whitephosphorus",
  "gic_highvelbullet_miss_c_pointblank",
  "gic_standardbullet_miss_a_pennyshot_messenger",
  "gic_1850x70mm_starshell_stage1"
  ],	//ammo types miss for mags, same ordering as above. this array cannot contain arrays.
 
 "ammoProjectileCount" : [
 12,
 1,
 1,
 1,
 10,
 8,
 1
 ],							//amount of projectiles per shot. may be wack at times.
  
  "usesAttachments" : true, //enables usage of attachments
  "attachmentsAvailable" : ["sight","underbarrel", "barrel"], //allows attachments of these types
  "attachmentTags" : ["gic_foregrip", "gic_sight", "gic_grenadelauncher", "gic_barrel"], //allows attachments with these tags
  
  "ammoMax" 		: 1,			//Specifies how big the guns' magazine is.
  "ammoAmount" 		: 1,			//Holds the current amount of ammo. Mostly set dynamically
  "magazineProjectile": "gic_shellcasing_shotgunshell", //Projectile dropped when reloading, basically a dummy projectile (Gnio)
  
  
  "animation" : "/items/active/weapons/ranged/gun.animation",
  "animationParts" : {
    "butt" : "",
    "middle" : "gic_ashot.png",
    "barrel" : "",
    "muzzleFlash" : ""
  },
  "animationCustom" : {
  
	"globalTagDefaults" : {
		"magazineImage" : "",	//optional, required for "magazineImages" to function
		"sightImage" : "", //required for attachments
		"barrelImage" : "", //required for attachments
		"underbarrelImage" : "", //required for attachments
		"stockImage" : "" //required for attachments
	},
  
	"animatedParts":{
      "stateTypes" : {
        "gunState" : {
          "default" : "empty",
          "states" : {					//animations are handled by both gunammo.lua (ammo states) and gunfireammo.lua (firing state). If you want to change those, make a copy and work with that.
			"firing" :{					//gun will transition to "firing" state each time you pull the trigger
			  "frames" : 4,
			  "cycle" : 0.05,
			  "mode" : "transition",
			  "transition" : "armed"	//transition mode and animation is set up for the crossbow. may not work for everything
			},
            "armed" : {					//gun transitions to "armed" state if it has ammo
              "frames" : 1,
			  "mode":"end"
            },
            "empty" : {					//gun transitions to "empty" if it has no ammo
              "frames" : 1,
			  "mode":"end"
            },
			"reloading" : {				//reloading animation, placeholder here but can be useful if reloadejects is set to false
			  "frames" : 3,
			  "mode" : "transition",
			  "transition" : "empty"
			}
          }
        },
		
		"grenadeLauncher" : {				//required for grenade launcher stuff
          "default" : "idle",
          "states" : {						//animations are designated by gunfireammonreload
			"idle" : {						//default state for normal under barrel attachments
              "frames" : 1,
			  "mode":"end"
            },
            "armed" : {						//"armed" state is the default idle state if the gun still has ammo
              "frames" : 1,
			  "mode":"end"
            },
			"reloading" : {					//reloading animation. For this weapon's reload, the player resets the bolt of the gun. I've added extra states because of this. Normally "transition" would be set to "empty". (Echo)
			  "frames" : 3,
			  "mode" : "transition",
			  "transition" : "armed"
			}
          }
        }
		
      },

      "parts" : {
	  
	  
	  
		"sight" : {
		  "properties" : {
			"centered" : true,
			"image" : "<sightImage>",
			"zLevel" : 10,
			"offset" : [0.975,0.275],
			"transformationGroups" : ["weapon"]
		  }
		},
		
		"barrel" : {
		  "properties" : {
			"centered" : true,
			"image" : "<barrelImage>",
			"zLevel" : 10,
			"offset" : [-0.17,0.315],
			"transformationGroups" : ["weapon"]
		  }
		},
		
		"underbarrel" : {
		  "properties" : {
			"centered" : true,
			"image" : "<underbarrelImage>",
			"zLevel" : 10,
			"offset" : [0.25,0.44],
			"transformationGroups" : ["weapon"]
		  },
		  
		  
		  
		  "partStates" : {					//required for grenade launcher stuff
			"grenadeLauncher" : {
			  "idle" : {
				"properties" : {
				  "image" : "<underbarrelImage>:<paletteSwaps>"
				}
			  },
			  "firing" : {
				"properties" : {
				  "image" : "<underbarrelImage>:firing.<frame><paletteSwaps>"
				}
			  },
              "armed" : {
                "properties" : {
                  "image" : "<underbarrelImage>:armed.<frame><paletteSwaps>"
                }
              },
              "empty" : {
                "properties" : {
                  "image" : "<underbarrelImage>:firing.3<paletteSwaps>"
                }
              },
			  "reloading" : {
			    "properties" : {
				  "image" : "<underbarrelImage>:reload.<frame><paletteSwaps>"
				}
			  }
			}
		  }
		},
	  
	  

	  
	    "middle" : {
          "properties" : {
            "image" : null
          },

		  "partStates" : {
            "gunState" : {
			  "firing" : {
				"properties" : {
				  "image" : "<partImage>:firing.<frame><paletteSwaps>"
				}
			  },
              "armed" : {
                "properties" : {
                  "image" : "<partImage>:armed.<frame><paletteSwaps>"
                }
              },
              "empty" : {
                "properties" : {
                  "image" : "<partImage>:firing.4<paletteSwaps>"
                }
              },
			  "reloading" : {
			    "properties" : {
				  "image" : "<partImage>:reload.<frame><paletteSwaps>"
				}
			  }
            }
          }
        }
      }
	},
	"lights" : {
		"flashlightAttachment" : {			//ABSOLUTELY REQUIRED if this weapon accepts a flashlight attachment unless you want a CRASHED GAME
			"active" : false
		}
	},
	"particleEmitters" : {
      "muzzleFlash" : {
        "burstCount" : 2,
        "particles" : [
		  { "particle" : "gic_tinyvehicledustysmoke", "offset" : [1.3, -0.3], "count" : 2 }
        ]
      },
      "hotsmoke" : {
        "burstCount" : 2,
        "particles" : [
		  { "particle" : "gic_riflemuzzle", "offset" : [1.15, 0.7], "count" : 2 }
        ]
      },
	  "altMuzzleFlash" : {						//alt muzzle flash particles for the grenade attachment
        "burstCount" : 2,
        "particles" : [
		  { "particle" : "ews_riflesmoke", "offset" : [1.0, -0.2], "count" : 2 },
		  { "particle" : "ews_riflemuzzle", "offset" : [1.2, 0.22], "count" : 3 }
        ]
      }
    },
    "sounds" : {
	  "suppressedFire" 	: [ "/sfx/gun/gic_m4a1_silencer_01.ogg" ],
      "fire" 		: [ "/sfx/gun/gic_metro2033_shotgun_shot.ogg" ],
	  "empty"		: [ "/sfx/gun/reload/machinepistol_reload_clip1.ogg" ],
      "switchAmmo" 	: [ "/sfx/gun/gic_shotgun_reload.ogg" ],
	  "switchAmmoAlt" : [ "/sfx/gic_mg_reload.ogg" ],
	  "soundEffectGrenade" : [ "/sfx/gun/gic_grenadelauncher.ogg" ]
    }
  },
  
  "animationScripts" : [
    "/items/active/effects/ews_lasersight.lua" 	//used for the laser sight attachment
  ],


  "baseOffset" : [0.35, 0.5], //0.4, 0.6
  "muzzleOffset" : [-0.2, 0.35],

  "scripts" : ["/items/active/weapons/ranged/ews_weaponcore.lua","/abilities/weight/gic_light_weapon.lua"],

  "elementalType" : "ews_smallarms",

  "primaryAbility" : {
    "scripts" : ["/items/weapons/ranged/INDEPENDENT/SCAVENGER/gic_crusadercrossbow/gic_crusadercrossbow_autoload.lua"],
    "class" : "ULTRAKILL",

	"missChance" : 35, //out of 100
	"missChanceCrouch" : 35, //irrelevant here since crouchAccuracy is disabled, is only here for references
	//"dynamicRecoilTemplate" : "ASSAULTRIFLE", uneeded as dynamicRecoilTemplate for assault rifles are present by default unless otherwise specified
	//"dynamicRecoilMaxSteps" : 3,
	//"dynamicRecoilMissMultiplier" : 0.25,

    "fireTime" : 0.25, //0.25
	"baseDamage" : 200,
    //"baseDps" : 900,
	"bonusDps" : 0,					//the parameter responsible for extra per-shot damage, introduced by ammo. Per shot damage gets spread over all the projectiles
    "energyUsage" : false,
    "inaccuracy" : 0.055,

    "projectileCount" : 12,
    "fireType" : "auto",
    "dynamicRecoil" : false,
    "projectileTypeMiss" : "gic_standardbullet_miss_c_shotgun_pointblank",
    "projectileType" : "gic_standardbullet_c_shotgun",
    "projectileParameters" : {
      "knockback" : 5
    },
    "stances" : {
      "idle" : {
        "armRotation" : 0,
        "weaponRotation" : 0,
        "twoHanded" : true,

        "allowRotate" : true,
        "allowFlip" : true,
		
		"frontArmFrame" : "swim.3",
        "backArmFrame" : "run.5"
      },
      "fire" : {
        "duration" : 0.12,
        "armRotation" : 6,
        "weaponRotation" : 6,
        "twoHanded" : true,

        "allowRotate" : true,
        "allowFlip" : true,
		
		"frontArmFrame" : "swim.3",
        "backArmFrame" : "run.5"
      },
 
      "motion1" : {
        "duration" : 0
      },
      "motion2" : {
        "duration" : 0
      },
      "motion3" : {
        "duration" : 0
      },
      "motion4" : {
        "duration" : 0
      },
      "motion5" : {
        "duration" : 0
      },
      "motion6" : {
        "duration" : 0
      },
	  
      "altFire" : {
        "duration" : 0.12,
        "armRotation" : 6,
        "weaponRotation" : 6,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "swim.3",
        "backArmFrame" : "run.5"
      },
      "altFire1" : {
        "duration" : 0
      },
      "altFire2" : {
        "duration" : 0
      },	  
	  
	  
	  
	  
	  
	  
      "altReload" : {
        "duration" : 0.4,
        "armRotation" : 10,
        "weaponRotation" : 10,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "swim.3",
        "backArmFrame" : "swim.3"
      },
       "altReload1" : {
        "duration" : 0.3,
        "armRotation" : -5,
        "weaponRotation" : -5,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "altReload2" : {
        "duration" : 0.3,
        "armRotation" : -5,
        "weaponRotation" : -5,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "swim.3",
        "backArmFrame" : "run.5"
      },
      "altReload3" : {
        "duration" : 0.3,
        "armRotation" : -5,
        "weaponRotation" : -5,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "swim.3",
        "backArmFrame" : "run.5"
      },
      "altReload4" : {
        "duration" : 0
      },
      "altReload5" : {
        "duration" : 0
      },
      "altReload6" : {
        "duration" : 0
      },	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
      "reload" : {
        "duration" : 0.4, //0.4
        "armRotation" : 10,
        "weaponRotation" : 10,
        "twoHanded" : true,

        "allowRotate" : true,
        "allowFlip" : true,
		
		"frontArmFrame" : "swim.3",
        "backArmFrame" : "swim.3"
      },
       "reload1" : {
        "duration" : 0.3, //0.3
        "armRotation" : -5,
        "weaponRotation" : -5,
        "twoHanded" : true,

        "allowRotate" : true,
        "allowFlip" : true,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "reload2" : {
        "duration" : 0.3, //0.3
        "armRotation" : -5,
        "weaponRotation" : -5,
        "twoHanded" : true,

        "allowRotate" : true,
        "allowFlip" : true,
		
		"frontArmFrame" : "swim.3",
        "backArmFrame" : "run.5"
      },
      "reload3" : {
        "duration" : 0.3, //0.3
        "armRotation" : -5,
        "weaponRotation" : -5,
        "twoHanded" : true,

        "allowRotate" : true,
        "allowFlip" : true,
		
		"frontArmFrame" : "swim.3",
        "backArmFrame" : "run.5"
      },
      "reload4" : {
        "duration" : 0
      },
      "reload5" : {
        "duration" : 0
      },
      "reload6" : {
        "duration" : 0
      },
      "cooldown" : {
        "duration" : 0.05,
        "armRotation" : 3,
        "weaponRotation" : 3,
        "twoHanded" : true,

        "allowRotate" : true,
        "allowFlip" : true,
		
		"frontArmFrame" : "swim.3",
        "backArmFrame" : "run.5"
      }
    }
  },

  "builder" : "/items/buildscripts/ews_buildunrandweapon_highres.lua"
}
