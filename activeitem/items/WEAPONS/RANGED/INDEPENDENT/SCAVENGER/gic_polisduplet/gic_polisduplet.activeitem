{
  "itemName" : "gic_polisduplet",	//this is an example weapon. Copy the folder to your mod (in appropriate location) and change "examplerifle" for the name you want to use
  "price" : 0,
  "inventoryIcon" : "gic_polisduplet.png:armed.1",
  "maxStack" : 1,
  "rarity" : "Rare",
  "description" : "''People have laughed at scrap guns like this. Called 'em 'cursed' and whatnot, giving us the laugh. 'specially the kids. Tell 'em what though, the real 'cursed' thing about it is that it still kills just as good as any other shotgun.''

When in the hands of desperate citizens, this gun is the undercolony's first and last defense. Accepts 18.50x70mm Shotgun Shells.",
  "shortdescription" : "Polis Quadlet",
  "level" : 1,
  "tooltipKind" : "gic_largebase_ammogun_highres_base",//custom tooltip, values set by the .lua
  "highResImg" : "/items/weapons/ranged/independent/SCAVENGER/gic_polisduplet/gic_polisduplet_highres.png",
  "category" : "^orange;Shotgun^reset;",
  "itemTags" : ["weapon","ranged","shotgun","gic"],
  "twoHanded" : true,
  "missChanceToggle" : true,
  //"npcGun" : true,
  
  "consumeAmmoOrderedInventory" : true,						//if enabled, gun will search for ammo in order as placed in the player's inventory! allows for players to better control what ammo they want to use
  "consumeAmmoTag" : "gic_1850x70mm_ammo",						//must be defined with consumeAmmoOrderedInventory is enabled! any item with this itemTag will be considered as a possible ammo item; will only be used as an ammo item if the tagged item's name matches with something from consumeAmmoType!
  
  "consumeAmmoModule" : true,
  "dynamicRecoil" : false,
  //"consumeAmmoAmount" : 2,
  
  "weaponDeterioration" : true,				//weapon deterioration module enabler; when enabled, the gun will lose one "durability" with every single shot. the lower the durability, the worse the performance.
  "weaponDurability" : [200,300],					//how much total durability the weapon has. will be set dynamically by scripts, this reps. default value. Can be set as an array to randomize initial durability.
  "weaponDurabilityMax" : 300,				//max durability for weapon
  "weaponDurabilityEffectMultiplier" : 0.5,		//negative effects of wep. deterioration are multiplied by this. For context by default at 0.0% durability, weapon will have 100% worse stats.
  
  "weaponAcceptRepairs" : true,		//if enabled, then accepts repair items
  "weaponRepairAcceptTags" : ["gic_repair"],	//repair item tags that this weapon can accept. repair items function like vanilla augments/attachments
  
  "fireShellProjectile" : "gic_gunfirenoise_standardknockback",		//shell projectile that spawns at muzzleOffset every time user fires. used to spawn noise projectiles
  "fireShellProjectileConfig" : {
  },
  
  "singleBulletLoad" : true,							//Different reload style; single bullet load means stances "reload1" and "reload2" are looped as the player manually inserts in each ammo item as needed. As stances are looped, sfx "switchAmmo" is played before stance "reload1" is triggered.
  "singleBulletLoadPreAnims" : true,					//Adds an additional animation before "singleBulletLoad" triggers its special reload. Requires stances "prereload1", "prereload2", "prereload3", and requires sfx "reloadPre" (plays before "prereload1" triggers). Will trigger gunState "reloadPre".
  "singleBulletLoadAfterAnims" : true,					//Adds an additional animation after "singleBulletLoad" finishes its special reload. Will go through stances "reload3", "reload4", "reload5", and "reload6", and requires sfx "reloadFinal" (plays before "reload3" triggers). Will trigger gunState "reloadFinal".


  
  "consumeAmmoType" : [
  "gic_1850x70mm_buckshot",
  "gic_1850x70mm_slug",
  "gic_1850x70mm_slug_highexplosive",
  "gic_1850x70mm_slug_whitephosphorus",
  "gic_1850x70mm_flechette",
  "gic_1850x70mm_pennyshot",
  "gic_1850x70mm_starshell"
  ],
  
  "magazineDamageValues" : [
  200,
  200,
  300,
  50,
  150,
  275,
  20
  ],	
  //first mag deals first listed value, etc. Can be a single value to set as for all different mag types. Only needed if "consumeAmmoType" is an array
  //"ammoMaxValues" : 7,									//will not function if consumeAmmoType is a table and "singleBulletLoad" is enabled.

  "ammoProjectileType" : [
  "gic_standardbullet_c_shotgun",
  "gic_standardbullet_c_slug",
  "gic_standardbullet_c_slug_highexplosive",
  "gic_standardbullet_c_slug_whitephosphorus",
  "gic_highvelbullet_c",
  "gic_standardbullet_a_pennyshot_messenger",
  "gic_1850x70mm_starshell_stage1"
  ],		//ammo types for mags, same ordering as above. this array cannot contain arrays.

  "ammoProjectileTypeMiss" : [
  "gic_standardbullet_miss_c_shotgun_pointblank",
  "gic_standardbullet_miss_c_slug_pointblank",
  "gic_standardbullet_miss_c_slug_highexplosive_pointblank",
  "gic_standardbullet_c_slug_whitephosphorus",
  "gic_highvelbullet_miss_c_pointblank",
  "gic_standardbullet_miss_a_pennyshot_messenger",
  "gic_1850x70mm_starshell_stage1"
  ],	//ammo types miss for mags, same ordering as above. this array cannot contain arrays.
 
 "ammoProjectileCount" : [
 12,
 1,
 1,
 1,
 10,
 8,
 1
 ],							//amount of projectiles per shot. may be wack at times.
 
  "crouchAccuracy" : true,
  
  
  "ammoMax" 		: 4,			//Specifies how big the guns' magazine is.
  //"magazineProjectile" : "gic_shellcasing_shotgunshell_x2_ejectshell_dbs", //Projectile dropped when reloading, basically a dummy projectile (Gnio)
  "magazineProjectiles" : [  
  "gic_shellcasing_shotgunshell_ejectshell",
  "gic_shellcasing_shotgunshell_slug_ejectshell",
  "gic_shellcasing_shotgunshell_explosive_ejectshell",
  "gic_shellcasing_shotgunshell_whitephosphorus_ejectshell",
  "gic_shellcasing_shotgunshell_flechette_ejectshell",
  "gic_shellcasing_shotgunshell_pennyshot_ejectshell",
  "gic_shellcasing_shotgunshell_starshell_ejectshell"
  ],
  "ammoAmount" 		: 4,			//Holds the current amount of ammo. Mostly set dynamically

  "animation" : "/items/active/weapons/ranged/gun.animation",
  "animationParts" : {
    "butt" : "",
    "middle" : "gic_polisduplet.png",
    "barrel" : "",
    "muzzleFlash" : ""
  },
  "animationCustom" : {
	"animatedParts":{
      "stateTypes" : {
        "gunState" : {
          "default" : "empty",
          "states" : {					//animations are handled by both gunammo.lua (ammo states) and gunfireammo.lua (firing state). If you want to change those, make a copy and work with that.
			"firing" :{					//gun will transition to "firing" state each time you pull the trigger
			  "frames" : 1,
			  "cycle" : 1,
			  "mode" : "transition",
			  "transition" : "armed"	//transition mode and animation is set up for the crossbow. may not work for everything
			},
            "armed" : {					//gun transitions to "armed" state if it has ammo
              "frames" : 1,
			  "mode":"end"
            },
            "empty" : {					//gun transitions to "empty" if it has no ammo
              "frames" : 1,
			  "mode":"end"
            },
			"reloading" : {				//reloading animation, placeholder here but can be useful if reloadejects is set to false
			  "frames" : 1,
			  "mode":"end"
			},
			"reloadPre" : {				//reloading animation, placeholder here but can be useful if reloadejects is set to false
			  "frames" : 1,
			  "cycle" : 1,
			  "mode" : "transition",
			  "transition" : "reloading"
			},
			"reloadFinal" : {				//reloading animation, placeholder here but can be useful if reloadejects is set to false
			  "frames" : 1,
			  "cycle" : 0.5,
			  "mode" : "transition",
			  "transition" : "empty"
			}
          }
        }
      },

      "parts" : {
        "middle" : {
          "properties" : {
            "image" : null
          },

          "partStates" : {
            "gunState" : {
			  "firing" : {
				"properties" : {
				  "image" : "<partImage>:armed.<frame><paletteSwaps>"
				}
			  },
              "armed" : {
                "properties" : {
                  "image" : "<partImage>:armed.<frame><paletteSwaps>"
                }
              },
              "empty" : {
                "properties" : {
                  "image" : "<partImage>:armed.1<paletteSwaps>"
                }
              },
			  "reloading" : {
			    "properties" : {
				  "image" : "<partImage>:reload.2<paletteSwaps>"
				}
			  },
			  "reloadPre" : {
			    "properties" : {
				  "image" : "<partImage>:reload.2<paletteSwaps>"
				}
			  },
			  "reloadFinal" : {
			    "properties" : {
				  "image" : "<partImage>:reload.1<paletteSwaps>"
				}
			  }
            }
          }
        }
      }
	},
	"particleEmitters" : {
      "muzzleFlash" : {
        "burstCount" : 2,
        "particles" : [
		  { "particle" : "gic_tinyvehicledustysmoke", "offset" : [1.7, 0.2], "count" : 2 }
        ]
      },
      "hotsmoke" : {
        "burstCount" : 3,
        "particles" : [
		  { "particle" : "gic_riflemuzzle", "offset" : [1.5, 0.8], "count" : 3 }
        ]
      }
    },
    "sounds" : {
      "fire" 		: [ "/sfx/gun/gic_metro2033_shotgun_shot.ogg" ],
	  "empty"		: [ "/sfx/gun/reload/machinepistol_reload_clip1.ogg" ],
      "switchAmmo" 	: [ "/sfx/gun/gic_shotgun_reload_shorter.ogg" ],
	  "reloadPre" 	: [ "/sfx/gun/reload/shotgun_reload_clip2.ogg" ],
	  "reloadFinal" 	: [ "/sfx/gun/reload/shotgun_reload_clip2.ogg" ]
    }
  },

	
  "animationScripts" : [
    "/items/active/effects/laserbeam.lua"
  ],



  "baseOffset" : [0.15, -0.05],
  "muzzleOffset" : [-0.1, 0.6],

  "scripts" : ["/items/active/weapons/ranged/ews_weaponcore.lua","/abilities/weight/gic_medium_weapon.lua"],

  "elementalType" : "ews_smallarms",

  "primaryAbility" : {
    "scripts" : ["/items/weapons/ranged/independent/scavenger/gic_polisduplet/gic_revolver_shotgun.lua"],
    "class" : "RevolverShotgun",
	"missChance" : 50,
	"missChanceCrouch" : 30,	


    "fireTime" : 0.2, //RPM to RPS: 1/(RPM/60)
	"baseDamage" : 200,
    //"baseDps" : 3000, //Damage Per Bullet: (baseDps*fireTime)*(1+0.5*level-1) sounds like a long equation, but blame the SB leveling system for adding a retarded step. just default to level:1 for ease. To find baseDps from bullet damage and fire time, (damagePerShot/fireTime)=baseDps
	"bonusDps" : 0,					//the parameter responsible for extra per-shot damage, introduced by ammo. Per shot damage gets spread over all the projectiles
    "energyUsage" : false,
    "inaccuracy" : 0.04,
	//"dynamicRecoilMaxSteps" : 3,
	//"dynamicRecoilMissMultiplier" : 0.25,
	//"dynamicRecoil" : false,

    "projectileCount" : 12,
    "fireType" : "auto",

	"projectileTypeMiss" : "gic_standardbullet_miss_c_shotgun_pointblank",
    "projectileType" : "gic_standardbullet_c_shotgun",
	
    "stances" : {
      "idle" : {
        "armRotation" : -10,
        "weaponRotation" : 10,
        "twoHanded" : true,
  
        "allowRotate" : true,
        "allowFlip" : true,
		
	    "frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "fire" : {
        "duration" : 0.04,
        "armRotation" : 0,
        "weaponRotation" : 20,
        "twoHanded" : true,
  
        "allowRotate" : false,
        "allowFlip" : false,
		
	    "frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
 
      "motion1" : {
        "duration" : 0.04,
        "armRotation" : -3,
        "weaponRotation" : 17,
        "twoHanded" : true,
  
        "allowRotate" : false,
        "allowFlip" : false,
		
	    "frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "motion2" : {
        "duration" : 0.04,
        "armRotation" : -5,
        "weaponRotation" : 13,
        "twoHanded" : true,
  
        "allowRotate" : false,
        "allowFlip" : false,
		
	    "frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "motion3" : {
        "duration" : 0
      },
      "motion4" : {
        "duration" : 0
      },
      "motion5" : {
        "duration" : 0
      },
      "motion6" : {
        "duration" : 0
      },
	  "prereload1" : {
        "duration" : 0.1,
        "armRotation" : -15,
        "weaponRotation" : 10,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "prereload2" : {
        "duration" : 0.4,
        "armRotation" : -15,
        "weaponRotation" : 10,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "rotation"
      },
 
      "prereload3" : {
        "duration" : 0.1,
        "armRotation" : -15,
        "weaponRotation" : 15,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "rotation"
      },
	  "reload" : {
        "duration" : 0.0,
        "armRotation" : -5,
        "weaponRotation" : 5,
		"weaponOffset" : [0,-0.0],
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "swim.3",
        "backArmFrame" : "run.5"
      },
      "reload1" : {
        "duration" : 0.5,
        "armRotation" : -15,
        "weaponRotation" : 15,
		"weaponOffset" : [0,-0.0],
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "swim.2"
      },
	  "reload2" : {
        "duration" : 0.5,
        "armRotation" : -15,
        "weaponRotation" : 15,
		"weaponOffset" : [0,-0.0],
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
      "reload3" : {
         "duration" : 0.2,
        "armRotation" : -5,
        "weaponRotation" : 20,
		"weaponOffset" : [0,-0.0],
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "rotation"
      },
      "reload4" : {
        "duration" : 0.1,
        "armRotation" : 2,
        "weaponRotation" : 3,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "rotation"
      },
      "reload5" : {
        "duration" : 0.5,
        "armRotation" : 0,
        "weaponRotation" : 0,
        "twoHanded" : true,

        "allowRotate" : false,
        "allowFlip" : false,
		
		"frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      },
	  "reload6" : {
        "duration" : 0.0
      },
      "cooldown" : {
        "duration" : 0.02,
        "armRotation" : -2,
        "weaponRotation" : 5,
        "twoHanded" : true,
  
        "allowRotate" : false,
        "allowFlip" : false,
		
	    "frontArmFrame" : "run.2",
        "backArmFrame" : "run.5"
      }
    }
  },
  "builder" : "/items/buildscripts/ews_buildunrandweapon_highres.lua"
}
